#X-Generator: crowdin.net
# BlockDrawer name

bc.angle=angle
bc.base=Base
bc.condition=Si
bc.else=Sinon
bc.exponent=Exposant
bc.from=Fourchette de valeur actuelle
bc.level=niveau
bc.max=Nombre max
bc.microseconds=us
bc.milliseconds=ms
# BlockConnector label
bc.pin_number=broche\#
bc.status=statut
bc.test=Si
bc.then=Alors
bc.to=Nouvelle fourchette de valeurs
bc.value==
bc.variable=Nom
bc.type_int=int
bc.type_float=float
bc.type_string=string
bc.type_boolean=boolean
bc.number=number
bc.frequency=fr\u00e9quence
bc.do=faire
bg.subroutine=Créer un bloc
bg.subroutine-ref=appeler le bloc

bm.left=gauche
bm.right=droite

bg.pin=pin


bd.control=M\u00e9thodes
bd.dfrobot=DFRobot
bd.number=Variables/Constantes
bd.operators=Operateurs Math
bd.pins=Broches
bd.seeedstudio=Seeedstudio Grove
bd.tinkerkit=Blocs TinkerKit
bd.utilities=Utilitaires

bg.abs=ABS
bg.addition=+
bg.and=ET
bg.cos=COS
bg.delay=
bg.delay_microseconds=


bg.digital-high=HAUT
bg.digital-low=BAS
bg.digital-off=Eteint
bg.digital-on=Allum\u00e9
bg.division=\u00f7
bg.equal\=\==\=\=
bg.false=FAUX
bg.glue_sb=Coller
bg.glue_sn=Coller
bg.greater=>
bg.greater_equal=>\=
bg.if=
bg.ifelse=
bg.less=<
bg.less_equal=<\=
bg.loop=boucle principale
bg.initData=phase d'initialisation

bg.number_to_string=123 -> "123"
bg.map=R\u00e9\u00e9talonne...
bg.map_common=R\u00e9\u00e9talonne de [0 \u00e0 1023] en [0 \u00e0 255]
bg.max=max
bg.message=texte
bg.millis=Temps depuis le d\u00e9marrage de la carte (millis)
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not=NON
bg.not_equal=\!\=
bg.number-int=1
bg.number-float=1.0

bg.or=OU
bg.pin-read-analog=Valeur de la broche Entree Analogique
bg.pin-read-digital=Valeur de la broche Entree num\u00e9rique
bg.pin-read-analog2=yoyo yoyo

bg.pin-write-analog=Fixe la sortie analogique \u00e0 la valeur \:
bg.pin-write-digital=Fixe la sortie num\u00e9rique au niveau
bg.pow=puissance
bg.random=Nombre al\u00e9atoire
bg.repeat_times=R\u00e9p\u00e8te
bc.times=fois

bg.serial_println=Ecris sur le port s\u00e9rie un message
bg.serial_printlnNumber=Ecrit sur le port s\u00e9rie "valeur = x.xx"
bg.servo=Servomoteur

bg.robot=robot
bg.addText=+

bg.declare_variable_digital=Nouveau bool\u00e9en
bg.declare_variable_string=Nouveau texte
bg.declare_variable_number_int=Nouveau nombre entier
bg.declare_variable_number_float=Nouveau nombre à virgule

bg.setter_variable_string==
bg.setter_variable_digital==
bg.setter_variable_number==

bg.variable_digital=Nom
bg.variable_number=Nom
bg.variable_string=Nom

bg.string=string

bg.sin=Sin
bg.sqrt=Racine carr\u00e9e
bg.subtraction=-
bg.tan=tan
bg.true=VRAI
bg.ultrasonic=Capteur Ultrason

bg.while=
bc.while=Tant que
ardublock.file.suffix=Fichier ArduBlock (*.abp)

ardublock.ui.save=Enregistrer
ardublock.ui.load=ouvrir
ardublock.ui.upload=Transf\u00e9rer
ardublock.ui.clone=Cloner
ardublock.ui.add_comment=Ajouter un commentaire
ardublock.ui.delete_comment=Supprimer un commentaire
ardublock.ui.organize_blocks=Organiser tous les blocs

message.title.error=Erreur
message.title.question=Question
message.content.open_unsaved=Votre programme ArduBlock a chang\u00e9, voulez-vous l'enregistrer ?
message.content.overwrite=Voulez-vous \u00e9craser le fichier existant ?
message.file_not_found=Fichier non trouv\u00e9 ou autorisation refus\u00e9e
1=1
bg.couple=,

bd.planetuino=robot planetuino

bd.planetLoopAndFunction=boucles et methodes
bd.planetOperations=operations
bd.planetRobotSensor=capteurs du robot
bd.planetrobotMaker=d\u00e9placements du robot
bd.planetrobotSoundLight=sons et lumières du robot
bd.planetVariables=variables et objets
bd.time=temps
bd.planetTests=tests et conditions

bg.robotCreateNew=nouveau MiniRobot


bg.robotStop=
bg.robotGoForeward=
bg.robotGoBackward=
bg.robotTurnRightOnRightWhell=
bg.robotTurnLeftOnLeftWhell=
bg.robotGoForewardLeftWhell=
bg.robotGoForewardRightWhell=
bg.robotTurnLeftOnCenter=
bg.robotTurnrightOnCenter=
bg.robotWriteSpeedRight=
bg.robotWriteSpeedLeft=
bg.robotStopRight=
bg.robotStopLeft=

bg.robotTurnRight=
bg.robotTurnLeft=
bg.robotStepRight=
bg.robotStepLeft=
bg.robotLeftEye=
bg.robotRightEye=
bg.robotSwitchOff=
bg.robotLeftButton=
bg.robotRightButton=
bg.robotEmitsound=
bg.robotSound=
bg.robotAction=action
bg.robotAction2=action

bg.robotCapteurAnalogique=
bg.robotCapteurNumerique=

bg.robotAntennaRight=antenne droite
bg.robotAntennaLeft=antenne gauche
bg.robotStartLed=allume la LED
bg.robotStopLed=\u00e9teint la LED
bg.robotObstablePresent=
bg.robotObstacleDistange=



ardublock.translator.exception.subroutineNameDuplicated=dau moins deux fonctions ont le meme nom!
ardublock.translator.exception.noLoopFound=boucle principale manquante!
ardublock.translator.exception.multipleLoopFound=trop de boucles principales!
ardublock.translator.exception.socketNull=element manquant!
ardublock.translator.exception.subroutineNotDeclared=fonction non déclarée

message.title.error=Erreur
message.title.question=Question
message.content.open_unsaved=Votre programme ArduBlock a changé, voulez-vous le sauvegarder?
message.content.overwrite=Voulez-vous remplacer le fichier existant?
message.file_not_found=Fichier non trouvé ou permission refusée
